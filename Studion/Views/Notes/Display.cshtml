@model Studion.ViewModels.NotesDisplayViewModel
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Display";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="jumbotron">
    <h2 id="title">@Model.Note.Title</h2>
    <div class="row">
        <table class="table">
            <tr>
                <th>Author</th>
                <th>Subject</th>
                <th>Level</th>
                <th>Exam Board</th>
                <th>Uploaded</th>
                <th>Downloads</th>
                <th>Rating</th>
            </tr>
            <tr>
                <td>@Html.ActionLink(Model.Note.author.UserName, "ProfilePage", "Users", new { UserID = Model.Note.author.Id }, null)</td>
                <td>@Model.Note.subject.SubjectName</td>
                <td>@Model.Note.level.LevelName</td>
                <td>@Model.Note.examBoard.ExamBoardName</td>
                <td>@Model.Note.UploadTime.ToShortDateString()</td>
                <td>@Model.Note.Downloads</td>
                <td>@Model.Note.GetAvRating()</td>
            </tr>
        </table>
    </div>
    <div class="row">
        @Html.Partial("~/Views/Rating/_RatingPartial.cshtml");
    </div>
    @if (User.Identity.GetUserId() == Model.Note.AuthorID || User.IsInRole(Studion.Models.RoleNames.Admin))
    {
        <div class="row">
            <div class="col-md-2 col-md-offset-2">
                <a class="btn btn-primary center-block" href="/Notes/Edit/@(Model.Note.NoteID)">Edit</a>
            </div>
            <div class="col-md-2 col-md-offset-4">
                <button id="delete-button" class="btn btn-danger center-block">Delete</button>
            </div>
        </div>
    }
</div>



@{
    //document viewer
    @Html.Partial("~/Views/Notes/_DocumentViewerPartial.cshtml", Model.Note.NoteID);

    //comment list
    <div class="row container">
        <br />
        <ul class="list-group" id="commentListGroup">
            <li class="list-group-item active" id="header">Comments</li>
        </ul>
    </div>


    //submit comment
    <div class="row-container">
        @if (Request.IsAuthenticated) // true if user is logged in
        {
            <form class="form-inline" id="commentForm">
                <ul class="list-group">
                    <li class="list-group-item">
                        <div class="col-md-offset-4">
                            <input type="text" class="form-control" name="commentMessage" />
                            <button type="submit" class="btn btn-primary">Write comment</button>
                        </div>                      
                    </li>
                </ul>
            </form>
        }

        else
        {
            <a class="btn btn-primary" href="@Url.Action("Login", "Account", new { returnUrl = Request.Url.AbsolutePath})">Log in to comment</a>
        }
    </div>
}

<script src="~/Scripts/Notes/display.js" id='scriptElement' noteID="@(Model.Note.NoteID) username="@HttpContext.Current.User.Identity.Name"></script>
