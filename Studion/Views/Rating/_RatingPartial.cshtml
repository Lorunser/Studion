@model Studion.ViewModels.NotesDisplayViewModel
@using Microsoft.AspNet.Identity

<div class="row">
    <!--Average rating-->
    <div class="col-md-5">
            <input id="display-rating" />
    </div>

    <!--Download button-->
    <div class="col-md-2">
        @if (Request.IsAuthenticated)
        {
            using (Html.BeginForm("Download", "Notes", new { NoteID = Model.Note.NoteID }, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <button type="submit" class="btn btn-primary btn-block btn-lg">Download</button>
            }
        }

        else
        {
            <form action="@Url.Action("Login", "Account", new { returnUrl = Request.Url.AbsolutePath})">
                <button class="btn btn-primary center-block btn-lg">Log in to download</button>
            </form>
        }
    </div>


    <!--Your rating-->
    <div class="col-md-5">
        @if (Request.IsAuthenticated)
        {
            <div class="col-md-offset-2">
                <input id="user-rating" />
            </div>
        }
        else
        {
            <form action="@Url.Action("Login", "Account", new { returnUrl = Request.Url.AbsolutePath})">
                <button class="btn btn-primary center-block btn-lg">Log in to rate</button>
            </form>
        }
    </div>
</div>

<script>
    //retrieve controls
    var displayRating = $("#display-rating");
    var userRating = $("#user-rating");

    //AVERAGE VALUES SECTION
    //instantiate
    displayRating.rating({
        min: '0',
        max: '5',
        disabled: true,
        readonly: true,
        size: 'sm',
        showClear: false,
        starCaptions: function (val) {
            //var rounded = Math.round(val * 100) / 100;
            //return rounded + " Stars";
            return 'Avg. rating';
        }
    });

    //get value from ajax
    $.ajax({
        url: '/api/ratings/@Model.Note.NoteID',
        method: 'GET',
        success: function (data) {
            //data just consists of a double
            displayRating.rating('update', data);
        }
    });


    // USERS RATING SECTION
    // check exists
    if (userRating.length == 1)
    {
        //initialise control
        userRating.rating({
            min: '0',
            max: '5',
            step: '1',
            clearCaption: 'Please rate',
            showClear: false,
            size: 'sm',
            starCaptions: function (val) {
                return 'Your rating';
            }
        });

        //set to correct value of stars
        $.ajax({
            url: '/api/ratings/@(Model.Note.NoteID)/@(User.Identity.GetUserId())',
            method: 'GET',
            success: function (data) {
                // data is a ratingDto object
                userRating.rating('update', data.stars);
            }
        });

        //handle change event
        userRating.on("rating:change", function (event, value) {
            if (value != 0) {
                //set ratingDto
                var ratingDto = {
                    noteID: '@Model.Note.NoteID',
                    stars: value
                };

                //send query to api
                $.ajax({
                    url: "/api/ratings",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(ratingDto),
                });
            }
        });
    }
</script>
